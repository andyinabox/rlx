.TH "RLX" "1" "September 2014" "rlx 0.1.229" "User Commands"
.SH "NAME"
rlx -- Command line interface for couchdb.
.SH "SYNOPSIS"

.SP
rlx <command> [\-c] [\-\-color|\-\-no\-color] [\-c|\-\-compress] [\-\-recursive]
.br
    [\-\-force] [\-\-http] [\-\-trace] [\-\-debug] [\-\-info] [\-\-warn] [\-\-error]
.br
    [\-\-help] [\-\-version] [\-s|\-\-server=<url>] [\-d|\-\-database=<name>]
.br
    [\-i|\-\-id=<id>] [\-a|\-\-attachment=<file>] [\-r|\-\-rev=<rev>]
.br
    [\-u|\-\-username=<name>] [\-p|\-\-password=<pass>] [\-o|\-\-output=<file>]
.br
    [\-f|\-\-file=<file>] [\-j|\-\-json=<json>] [\-t|\-\-template=<name>]
.br
    [\-q|\-\-query=<params...>] [\-h|\-\-header=<key:value...>]
.br
    [\-g|\-\-glob=<pattern...>] [\-\-destination=<url>] [\-\-ddoc=<name>]
.br
    [\-n|\-\-name=<name>] [\-\-feed=<type>] <args>
.SH "DESCRIPTION"
.PP
Designed for parity with the couchdb HTTP API, run \fBhelp <cmd>\fR for more information on individual commands, start an interactive session with \fBrlx i\fR.
.SH "COMMANDS"
.BL
.IP "\[ci]" 4
\fBadmin\fR: Manage server administrators.
.IP "\[ci]" 4
\fBuser, usr\fR: Manage server users.
.IP "\[ci]" 4
\fBdatabase, db\fR: Manage databases.
.IP "\[ci]" 4
\fBsecurity, sec\fR: Get or set database security.
.IP "\[ci]" 4
\fBdocument, doc\fR: Manage documents.
.IP "\[ci]" 4
\fBdocs\fR: Bulk document tasks.
.IP "\[ci]" 4
\fBattach, att\fR: Manage document attachments.
.IP "\[ci]" 4
\fBreplicate, repl\fR: Replicate a database.
.IP "\[ci]" 4
\fBapplication, app\fR: Manage design document applications.
.IP "\[ci]" 4
\fBlocal, lcl\fR: Manage local documents.
.IP "\[ci]" 4
\fBlogin\fR: Login to a server.
.IP "\[ci]" 4
\fBlogout\fR: Logout of current session.
.IP "\[ci]" 4
\fBsession, sess\fR: Session authentication.
.IP "\[ci]" 4
\fBconfig, conf\fR: Manage server configuration.
.IP "\[ci]" 4
\fBmeta, info\fR: Print server information.
.IP "\[ci]" 4
\fBstats\fR: Print server statistics.
.IP "\[ci]" 4
\fBtasks\fR: Print active tasks. 
.IP "\[ci]" 4
\fBlog\fR: Tail server log file. 
.IP "\[ci]" 4
\fBrestart\fR: Restart a server.
.IP "\[ci]" 4
\fBuuids\fR: Print list of uuids.
.IP "\[ci]" 4
\fBedit\fR: Edit a document.
.IP "\[ci]" 4
\fBtemplate, tpl\fR: Manage template files.
.IP "\[ci]" 4
\fBlint\fR: Lint javascript and json.
.IP "\[ci]" 4
\fBlevel, lvl\fR: Get or set the server log level.
.IP "\[ci]" 4
\fBwhoami\fR: Get current user information.
.IP "\[ci]" 4
\fBrunconf, rc\fR: Runtime configuration.
.IP "\[ci]" 4
\fBinteractive, i\fR: Interactive REPL console.
.IP "\[ci]" 4
\fBhelp\fR: Show help for commands.
.EL
.SH "OPTIONS"
.BL
.IP "\[ci]" 4
\fB\-g, \-\-glob=[pattern...]\fR: File match pattern(s).
.IP "\[ci]" 4
\fB\-\-[no]\-color\fR: Enable or disable terminal colors.
.IP "\[ci]" 4
\fB\-d, \-\-database=[name]\fR: Database name.
.IP "\[ci]" 4
\fB\-i, \-\-id=[id]\fR: Document identifier.
.IP "\[ci]" 4
\fB\-a, \-\-attachment=[file]\fR: Attachment file path.
.IP "\[ci]" 4
\fB\-r, \-\-rev=[rev]\fR: Document revision.
.IP "\[ci]" 4
\fB\-u, \-\-username=[name]\fR: Authentication username.
.IP "\[ci]" 4
\fB\-p, \-\-password=[pass]\fR: Authentication password.
.IP "\[ci]" 4
\fB\-o, \-\-output=[file]\fR: Write response to output file.
.IP "\[ci]" 4
\fB\-f, \-\-file=[file]\fR: Read JSON input from file.
.IP "\[ci]" 4
\fB\-j, \-\-json=[json]\fR: JSON string literal (overrides \-\-file).
.IP "\[ci]" 4
\fB\-t, \-\-template=[name]\fR: Name of a template file.
.IP "\[ci]" 4
\fB\-c, \-\-compress\fR: Compact JSON output format (zero indent). 
.IP "\[ci]" 4
\fB\-q, \-\-query=[params...]\fR: Query string parameters.
.IP "\[ci]" 4
\fB\-h, \-\-header=[key: value...]\fR: Additional HTTP headers.
.IP "\[ci]" 4
\fB\-s, \-\-server=[url]\fR: Database server.
.IP "\[ci]" 4
\fB\-\-recursive\fR: Read directories recursively.
.IP "\[ci]" 4
\fB\-\-destination=[url]\fR: Copy destination.
.IP "\[ci]" 4
\fB\-\-force\fR: Force file overwrite.
.IP "\[ci]" 4
\fB\-\-ddoc=[name]\fR: Design document id.
.IP "\[ci]" 4
\fB\-n, \-\-name=[name]\fR: Design document function name (view|update|show|list).
.IP "\[ci]" 4
\fB\-\-feed=[type]\fR: Poll feed type. 
.IP "\[ci]" 4
\fB\-\-http\fR: Enable HTTP logs.
.IP "\[ci]" 4
\fB\-\-trace\fR: Set log level to trace.
.IP "\[ci]" 4
\fB\-\-debug\fR: Set log level to debug.
.IP "\[ci]" 4
\fB\-\-info\fR: Set log level to info.
.IP "\[ci]" 4
\fB\-\-warn\fR: Set log level to warn.
.IP "\[ci]" 4
\fB\-\-error\fR: Set log level to error.
.IP "\[ci]" 4
\fB\-\-help\fR: Display this help and exit.
.IP "\[ci]" 4
\fB\-\-version\fR: Print version and exit.
.EL
.SH "ENVIRONMENT"
.PP
The \fB$HOME\fR environment variable must be set in order for user configuration data to be loaded, typically for most developer environments this is not an issue however when using \fBrlx(1)\fR as part of infrastructure deployment you may need to ensure that \fB$HOME\fR is set.
.SH "FILES"
.PP
Input files are read with the following precedence: \fBstdin\fR, \fB\-\-json\fR and \fB\-\-file\fR. 
.PP
To read from \fBstdin\fR the special option (\-) must be specified, if data is written to \fBstdin\fR it must be a JSON document or an error is reported. When the \fB\-\-json\fR option is specified it must be a valid JSON string literal, be sure to enclose in quotes to prevent shell errors.
.PP
If both the \fB\-\-json\fR and \fB\-\-file\fR options are specified the JSON literal is preferred.
.PP
Files specified using the \fB\-\-file\fR option may be a file system path or URL. Relative paths are resolved according to the current working directory. For example:

.SP
  rlx lint \-f package.json
.br
  rlx lint \-f http://registry.npmjs.org
.br
  rlx lint \-j '{}'
.br
  cat package.json | rlx \- lint
.SH "HISTORY"
.PP
This program was originally implemented in bash shell script, see https://github.com/freeformsystems/rlx\-shell.
.PP
Bash was chosen for ease of readline integration and the ability to concisely pipe between programs amongst other features. However implementing a complex program in shell script is non\-trivial and it needed to rely on external languages for JSON support.
.PP
The original implementation whilst almost feature complete was deprecated in favour of a pure javascript version. In addition the original implementation started from a pure interactive REPL perspective with a view to implementing non\-interactive support later \- it never happened.
.PP
For the javascript program an inverse approach is taken, the REPL is the last feature to be implemented.
.SH "BUGS"
.PP
Report bugs to https://github.com/freeformsystems/rlx/issues.
